{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ debug\n  info\n  whisper\n  warn\n  urge\n  help }                  = GUY.trm.get_loggers 'METTEUR'\n{ rpr\n  echo }                  = GUY.trm\nPATH                      = require 'node:path'\nFS                        = require 'node:fs'\nresolve                   = ( P... ) -> PATH.resolve PATH.join __dirname, '..', P...\nH                         = require './helpers'\ntypes                     = require './types'\n{ isa }                   = types\n{ Template }              = require './metteur-templating'\n{ hide\n  get\n  has  }                  = GUY.props\n{ freeze }                = GUY.lft\n# { equals }                = types\n# { HDML }                  = require 'hdml'\n{ PDFDocument }           = require 'pdf-lib'\nfontkit                   = require '@pdf-lib/fontkit'\npage_tpl                  = \"\"\"\n  %-------------------------------------------------------------------------------------------------------------------------------------------------------\n  \\\\begin{tikzpicture}[overlay,remember picture]%\n  \\\\node[anchor=north west,xshift=❰xshift❱mm,yshift=❰yshift❱mm] at (current page.north west){%\n    \\\\rotatebox{❰angle_ccw❱}{%\n    \\\\includegraphics[width=❰page_width❱mm,height=❰page_height❱mm,page=❰page_nr❱]{❰bdp_path❱}}};%\n    \\\\end{tikzpicture}% sheet ❰sheet_nr❱ ❰side_name❱ col ❰column_nr❱ row ❰slot_nr❱, pos ❰slot_map❱, p❰page_nr❱ ↷ ❰angle_cw❱°\n  \\\\begin{tikzpicture}[overlay,remember picture]%\n  \\\\node[anchor=north west,xshift=❰xshift❱mm,yshift=❰yshift❱mm] at (current page.north west){%\n    \\\\rotatebox{❰angle_ccw❱}{%\n    \\\\fbox{\\\\includegraphics[width=❰page_width❱mm,height=❰page_height❱mm,page=❰page_nr❱]{❰source_path❱}}}};%\n    \\\\end{tikzpicture}% sheet ❰sheet_nr❱ ❰side_name❱ col ❰column_nr❱ row ❰slot_nr❱, pos ❰slot_map❱, p❰page_nr❱ ↷ ❰angle_cw❱°\n  \\\\begin{tikzpicture}[overlay,remember picture]%\n  \\\\node[anchor=north west,xshift=❰xshift❱mm,yshift=❰yshift❱mm] at (current page.north west){%\n    \\\\rotatebox{❰angle_ccw❱}{%\n    \\\\includegraphics[width=❰page_width❱mm,height=❰page_height❱mm,page=❰pos_nr❱]{❰ovl_path❱}}};%\n    \\\\end{tikzpicture}% sheet ❰sheet_nr❱ ❰side_name❱ col ❰column_nr❱ row ❰slot_nr❱, pos??? ❰pos_nr❱, pos ❰slot_map❱, p❰page_nr❱ ↷ ❰angle_cw❱°\\n\n    \"\"\"\n\n#===========================================================================================================\nclass Metteur extends GUY.props.Strict_owner\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super()\n    hide @, 'types', types\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  impose: ( cfg ) -> @_impose types.create.mtr_impose_cfg cfg\n\n  #---------------------------------------------------------------------------------------------------------\n  _impose: ( cfg ) ->\n    await @_generate_overlay cfg\n    doc_tpl_path    = resolve 'tex/booklet.template.tex'\n    doc_tpl         = FS.readFileSync doc_tpl_path, { encoding: 'utf-8', }\n    format          = ( x ) -> if isa.text x then x else rpr x\n    doc_tpl         = new Template { template: doc_tpl,       open: '❰', close: '❱', format, }\n    page_tpl        = new Template { template: page_tpl,      open: '❰', close: '❱', format, }\n    #.......................................................................................................\n    Q               = new GUY.props.Strict_owner seal: true, target:\n      # frame_weight:     '0.25mm'\n      # frame_weight:     '0.125mm'\n      frame_weight:     '0.05mm'\n      xshift:           Template.misfit\n      yshift:           Template.misfit\n      column_count:     Template.misfit\n      row_count:        Template.misfit\n      column_width:     Template.misfit\n      row_height:       Template.misfit\n      page_width:       Template.misfit\n      page_height:      Template.misfit\n      side_name:        Template.misfit\n      side:             Template.misfit\n      column:           Template.misfit\n      column_idx:       Template.misfit\n      column_nr:        Template.misfit\n      angles:           Template.misfit\n      orientation:      Template.misfit\n      sheet_nr:         0\n      page_nr:          Template.misfit\n      page_idx:         Template.misfit\n      pos_nr:           Template.misfit\n      slot_map:         Template.misfit\n      slot_idx:         Template.misfit\n      slot_nr:          Template.misfit\n      angle_cw:         Template.misfit\n      angle_ccw:        Template.misfit\n      source_path:      cfg.input\n      ovl_path:         cfg.ovl_path\n      bdp_path:         cfg.bdp_path\n      correction:       { x: -2, y: +1.5, }\n    #.......................................................................................................\n    Q.column_count  = cfg.layout.recto.pages.length\n    Q.row_count     = cfg.layout.recto.pages[ 0 ].length\n    Q.column_width  = cfg.sheet.width.value   / Q.column_count\n    Q.row_height    = cfg.sheet.height.value  / Q.row_count\n    if cfg.layout.pages_standing\n      Q.page_width    = Q.column_width\n      Q.page_height   = Q.row_height\n    else\n      Q.page_width    = Q.row_height\n      Q.page_height   = Q.column_width\n    Q.orientation   = if cfg.orientation is 'ltr' then +1 else -1\n    loop\n      Q.sheet_nr++\n      break if Q.sheet_nr > cfg.sheetcount\n      for _side_name in [ 'recto', 'verso', ]\n        Q.side_name = _side_name\n        Q.side      = cfg.layout[ Q.side_name ]\n        doc_tpl.fill_some { content: '\\\\newpage%\\n', } if Q.sheet_nr > 1 or Q.side_name is 'verso'\n        for _column, _column_idx in Q.side.pages\n          Q.column      = _column\n          Q.column_idx  = _column_idx\n          Q.column_nr   = Q.column_idx + 1\n          Q.angles      = Q.side.angles[ _column_idx ]\n          debug '^3353^', { _column, _column_idx, angles: Q.angles, }\n          for _slot_map, _slot_idx in Q.column\n            Q.slot_map    = _slot_map\n            Q.slot_idx    = _slot_idx\n            Q.slot_nr     = Q.slot_idx + 1\n            Q.angle_cw    = Q.angles[ _slot_idx ]\n            Q.angle_ccw   = -Q.angle_cw ### NOTE converting from anti-clockwise to clockwise ###\n            pdistro_idx   = ( Q.sheet_nr - 1 ) * cfg.layout.pps + Q.slot_map - 1\n            Q.pos_nr      = pdistro_idx + 1\n            Q.page_nr     = cfg.pagedistro[ pdistro_idx ] ? -1 ### NOTE: using -1 as error code ###\n            Q.xshift      = (  Q.column_width  * Q.column_idx  ) + Q.correction.x\n            Q.yshift      = ( -Q.row_height    * Q.slot_idx    ) + Q.correction.y\n            #...............................................................................................\n            urge '^234^', \"sheet #{Q.sheet_nr} #{Q.side_name} slot c#{Q.column_idx + 1},s#{Q.slot_idx + 1}, pos #{Q.slot_map}, p#{Q.page_nr} ↷ #{Q.angle_cw}\"\n            page_tpl.fill_all Q\n            doc_tpl.fill_some { content: page_tpl.finish(), }\n    doc_tpl.fill_some { frame_weight: Q.frame_weight, }\n    # template = @interpolate template, Q\n    #.......................................................................................................\n    return doc_tpl.finish()\n\n  #---------------------------------------------------------------------------------------------------------\n  _generate_overlay: ( cfg ) ->\n    font_path = PATH.join __dirname, '../fonts/EBGaramond08-Regular.ttf'\n    doc       = await PDFDocument.create()\n    #.......................................................................................................\n    fontBytes = FS.readFileSync font_path\n    doc.registerFontkit fontkit\n    font      = await doc.embedFont fontBytes, { subset: true, features: {\n      lnum: true,\n      liga: true,\n      dlig: true, }, }\n    width     = H.pt_from_mm cfg.page_width\n    height    = H.pt_from_mm cfg.page_height\n    quire_nr  = 0\n    poscount  = cfg.layout.pps * cfg.sheetcount\n    #.......................................................................................................\n    for pos_nr in [ 1 .. poscount ]\n      page      = doc.addPage [ width, height, ]\n      ### NOTE apparently must write some text, even if blank, otherwise LaTeX will complain ###\n      page.drawText \"\", { font, x: 0, y: 0, }\n      size      = H.pt_from_mm 10\n      x         = H.pt_from_mm 10\n      y         = H.pt_from_mm 10\n      slot_nr   = ( ( pos_nr - 1 ) %% cfg.layout.pps ) + 1\n      switch slot_nr\n        when 1\n          quire_nr++\n          page.drawText \"#{quire_nr}\", { font, x, y, size, }\n        when 3\n          page.drawText \"*#{quire_nr}\", { font, x, y, size, }\n        else\n          null\n    #.......................................................................................................\n    FS.writeFileSync cfg.ovl_path, await doc.save()\n    return null\n\n\n#===========================================================================================================\nmodule.exports = { Template, Metteur, }\n\n\n"
  ]
}