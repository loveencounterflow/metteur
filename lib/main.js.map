{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ debug\n  info\n  whisper\n  warn\n  urge\n  help }                  = GUY.trm.get_loggers 'METTEUR'\n{ rpr\n  echo }                  = GUY.trm\nPATH                      = require 'path'\nFS                        = require 'fs'\nresolve                   = ( P... ) -> PATH.resolve PATH.join __dirname, '..', P...\ntypes                     = new ( require 'intertype' ).Intertype()\n# { equals }                = types\n# { HDML }                  = require 'hdml'\npage_template             = \"\"\"\n  \\\\begin{tikzpicture}[overlay,remember picture]\n  \\\\node[anchor=north west,xshift=❰xshift❱mm,yshift=❰yshift❱mm] at (current page.north west){\n    \\\\includegraphics[width=76.75mm,height=110mm,angle=❰angle❱,page=❰page_nr❱]{../16-page-booklet.pdf}};\n    \\\\end{tikzpicture}\"\"\".replace /\\s*\\n\\s*/g, ''\n\nlayout =\n  recto:\n    left:   [  4, 13, 16,  1, ]\n    right:  [  5, 12,  9,  8, ]\n  verso:\n    left:   [  6, 11, 10,  7, ]\n    right:  [  3, 14, 15,  2, ]\n\n#-----------------------------------------------------------------------------------------------------------\ndemo = ->\n  template_path   = resolve 'tex/booklet.template.tex'\n  tex_target_path = resolve 'tex/booklet.tex'\n  source_path     = resolve '16-page-booklet.pdf'\n  template        = FS.readFileSync template_path, { encoding: 'utf-8', }\n  for side in [ 'recto', 'verso', ]\n    echo '\\\\newpage' if side is 'verso'\n    sheet = layout[ side ]\n    for column in [ 'left', 'right', ]\n      ### TAINT precompute using named values ###\n      if column is 'left'\n        xshift  = 0\n        angle   = +90\n      else\n        xshift  = 210 / 2\n        angle   = -90\n      for page_nr, page_idx in sheet[ column ]\n        yshift = -( 297 / 4 ) * page_idx ### TAINT precompute using named values ###\n        page  = page_template\n        page  = page.replace /❰xshift❱/g,   xshift\n        page  = page.replace /❰yshift❱/g,   yshift\n        page  = page.replace /❰angle❱/g,    angle\n        page  = page.replace /❰page_nr❱/g,  page_nr\n        page += \" % #{side} #{column} r#{page_idx + 1} p#{page_nr}\"\n        template.replace  /(?=❰page❱)/g, page\n  return null\n\n\n############################################################################################################\nif module is require.main then do =>\n  await demo()\n"
  ]
}