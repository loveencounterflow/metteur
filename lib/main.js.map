{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ debug\n  info\n  whisper\n  warn\n  urge\n  help }                  = GUY.trm.get_loggers 'METTEUR'\n{ rpr\n  echo }                  = GUY.trm\nPATH                      = require 'path'\nFS                        = require 'fs'\nresolve                   = ( P... ) -> PATH.resolve PATH.join __dirname, '..', P...\ntypes                     = require './types'\n{ isa }                   = types\nmisfit                    = Symbol 'misfit'\n{ hide\n  get\n  has  }                  = GUY.props\n{ freeze }                = GUY.lft\n# { equals }                = types\n# { HDML }                  = require 'hdml'\npage_template             = \"\"\"\n  \\\\begin{tikzpicture}[overlay,remember picture]%\n  \\\\node[anchor=north west,xshift=❰xshift❱mm,yshift=❰yshift❱mm] at (current page.north west){%\n    \\\\fbox{\\\\includegraphics[width=❰width❱mm,height=❰height❱mm,angle=❰angle❱,page=❰page_nr❱]{❰source_path❱}}};%\n    \\\\end{tikzpicture}% ❰side❱ ❰column❱ r❰page_idx1❱ p❰page_nr❱\\n\"\"\"#.replace /\\s*\\n\\s*/g, ''\n\nlayout =\n  orientation: 'ltr' # or 'rtl' which will invert the orientation of all pages, allowing for CJK, Arabic RTL books\n  recto:\n    left:   [  4, 13, 16,  1, ]\n    right:  [  5, 12,  9,  8, ]\n  verso:\n    left:   [  6, 11, 10,  7, ]\n    right:  [  3, 14, 15,  2, ]\n\n\n#===========================================================================================================\n# types.declare 'tmpltr_cfg',\n\n#===========================================================================================================\nclass Template extends GUY.props.Strict_owner\n\n  #---------------------------------------------------------------------------------------------------------\n  hide @, 'misfit', misfit\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super()\n    hide @, 'types', types\n    @cfg    = new GUY.props.Strict_owner { target: ( @types.create.mtr_new_template cfg ), freeze: true, }\n    #.......................................................................................................\n    open    = @_escape_literal_for_regex @cfg.open\n    close   = @_escape_literal_for_regex @cfg.close\n    hide @, '_segments',        []\n    hide @, '_mark_idxs',       {}\n    hide @, '_idx_directions',  {}\n    hide @, '_cfg', freeze\n      open:   open\n      close:  close\n      rx:     /// #{open} (?<key>[^#{close}]*) #{close} ///g\n    #.......................................................................................................\n    @_compile()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _compile: ->\n    is_mark = true\n    for segment_or_mark, idx in @cfg.template.split @_cfg.rx\n      if is_mark = not is_mark\n        direction = 'append'\n        if segment_or_mark.startsWith '...'\n          segment_or_mark = segment_or_mark[ 3 ... ]\n        else if segment_or_mark.endsWith '...'\n          segment_or_mark = segment_or_mark[ ... segment_or_mark.length - 3 ]\n          direction = 'prepend'\n        @_segments.push []\n        ( @_mark_idxs[ segment_or_mark ] ?= [] ).push idx\n        @_idx_directions[ idx ]           = direction\n      else\n        @_segments.push segment_or_mark\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _fill: ( mode, cfg ) ->\n    cfg             = @types.create.mtr_template_fill cfg\n    { isa\n      type_of }     = @types\n    isa_text        = isa.text\n    do_format       = @cfg.format?\n    for key, idxs of @_mark_idxs\n      if ( value = get cfg, key, misfit ) is misfit\n        continue if mode is 'some'\n        throw new Error \"unknown key #{rpr key}\"\n      value = @cfg.format value, key if do_format\n      throw new Error \"expected text, got a #{type_of value} for key #{rpr key}\" unless isa_text value\n      for idx in idxs\n        if @_idx_directions[ idx ] is 'append' then @_segments[ idx ].push    value\n        else                                        @_segments[ idx ].unshift value\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  fill_all:   ( cfg ) -> @_fill 'all',  cfg\n  fill_some:  ( cfg ) -> @_fill 'some', cfg\n\n  #---------------------------------------------------------------------------------------------------------\n  clear: ->\n    @_segments[ idx ] = [] for idx in [ 1 ... @_segments.length ] by +2\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  finish: -> R = @peek(); @clear(); R\n  peek:   -> @_segments.flat().join ''\n\n  #---------------------------------------------------------------------------------------------------------\n  ### thx to https://stackoverflow.com/a/6969486/7568091 and\n  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#escaping ###\n  _escape_literal_for_regex: ( literal ) -> literal.replace /[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'\n\n\n\n#===========================================================================================================\nclass Metteur extends GUY.props.Strict_owner\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  impose: ( cfg ) ->\n    cfg             = types.create.mtr_impose_cfg cfg\n    template_path   = resolve 'tex/booklet.template.tex'\n    tex_target_path = resolve 'tex/booklet.tex'\n    doc_template    = FS.readFileSync template_path, { encoding: 'utf-8', }\n    format          = ( x ) -> if isa.text x then x else rpr x\n    doc_tpl         = new Template { template: doc_template,  open: '❰', close: '❱', format, }\n    page_tpl        = new Template { template: page_template, open: '❰', close: '❱', format, }\n    #.......................................................................................................\n    Q               = new GUY.props.Strict_owner seal: true, target:\n      # frame_weight:     '0.25mm'\n      frame_weight:     '0mm'\n      xshift:           Template.misfit\n      yshift:           Template.misfit\n      angle:            Template.misfit\n      width:            Template.misfit\n      height:           Template.misfit\n      side:             Template.misfit\n      column:           Template.misfit\n      orientation:      Template.misfit\n      page_nr:          Template.misfit\n      page_idx:         Template.misfit\n      page_idx1:        Template.misfit\n      source_path:      cfg.input\n      correction:       { x: -2, y: +1.5, }\n    #.......................................................................................................\n    ### TAINT precompute using named values ###\n    Q.width         = 297 / 4\n    Q.height        = 210 / 2\n    Q.orientation   = if layout.orientation is 'ltr' then +1 else -1\n    for _side in [ 'recto', 'verso', ]\n      Q.side  = _side\n      sheet   = layout[ Q.side ]\n      doc_tpl.fill_some { content: '\\\\newpage%\\n', } if Q.side is 'verso'\n      for _column in [ 'left', 'right', ]\n        Q.column = _column\n        ### TAINT precompute using named values ###\n        if Q.column is 'left'\n          Q.xshift  = 0 + Q.correction.x\n          Q.angle   = -90 * Q.orientation\n        else\n          Q.xshift  = 210 / 2 + Q.correction.x\n          Q.angle   = +90 * Q.orientation\n        for _page_nr, _page_idx in sheet[ Q.column ]\n          Q.page_nr   = _page_nr\n          Q.page_idx  = _page_idx\n          Q.page_idx1 = _page_idx + 1\n          Q.yshift    = -( 297 / 4 ) * Q.page_idx + Q.correction.y ### TAINT precompute using named values ###\n          page_tpl.fill_all Q\n          doc_tpl.fill_some { content: page_tpl.finish(), }\n    doc_tpl.fill_some { frame_weight: Q.frame_weight, }\n    # template = @interpolate template, Q\n    FS.writeFileSync tex_target_path, doc_tpl.finish()\n    help \"wrote output to #{tex_target_path}\"\n    #.......................................................................................................\n    return null\n\n\n#-----------------------------------------------------------------------------------------------------------\ndemo = ->\n  mtr = new Metteur()\n  mtr.impose()\n  return null\n\n#===========================================================================================================\nmodule.exports = { Template, Metteur, demo, }\n\n\n############################################################################################################\nif module is require.main then do =>\n  await demo()\n"
  ]
}