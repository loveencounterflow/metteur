{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ debug\n  info\n  whisper\n  warn\n  urge\n  help }                  = GUY.trm.get_loggers 'METTEUR'\n{ rpr\n  echo }                  = GUY.trm\nPATH                      = require 'path'\nFS                        = require 'fs'\nresolve                   = ( P... ) -> PATH.resolve PATH.join __dirname, '..', P...\ntypes                     = require './types'\nmisfit                    = Symbol 'misfit'\n{ hide\n  get\n  has  }                  = GUY.props\n{ freeze }                = GUY.lft\n# { equals }                = types\n# { HDML }                  = require 'hdml'\npage_template             = \"\"\"\n  \\\\begin{tikzpicture}[overlay,remember picture]\n  \\\\node[anchor=north west,xshift=❰xshift❱mm,yshift=❰yshift❱mm] at (current page.north west){\n    \\\\fbox{\\\\includegraphics[width=❰width❱mm,height=❰height❱mm,angle=❰angle❱,page=❰page_nr❱]{❰source_path❱}}};\n    \\\\end{tikzpicture}\"\"\".replace /\\s*\\n\\s*/g, ''\n\nlayout =\n  orientation: 'ltr' # or 'rtl' which will invert the orientation of all pages, allowing for CJK, Arabic RTL books\n  recto:\n    left:   [  4, 13, 16,  1, ]\n    right:  [  5, 12,  9,  8, ]\n  verso:\n    left:   [  6, 11, 10,  7, ]\n    right:  [  3, 14, 15,  2, ]\n\n\n#===========================================================================================================\n# types.declare 'tmpltr_cfg',\n\n#===========================================================================================================\nclass @Template extends GUY.props.Strict_owner\n\n  #---------------------------------------------------------------------------------------------------------\n  hide @, 'misfit', misfit\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super()\n    hide @, 'types', types\n    @cfg    = new GUY.props.Strict_owner { target: ( @types.create.mtr_new_template cfg ), freeze: true, }\n    #.......................................................................................................\n    open    = @_escape_literal_for_regex @cfg.open\n    close   = @_escape_literal_for_regex @cfg.close\n    hide @, '_segments',        []\n    hide @, '_mark_idxs',       {}\n    hide @, '_idx_directions',  {}\n    hide @, '_cfg', freeze\n      open:   open\n      close:  close\n      rx:     /// #{open} (?<key>[^#{close}]*) #{close} ///g\n    #.......................................................................................................\n    @_compile()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _compile: ->\n    is_mark = true\n    for segment_or_mark, idx in @cfg.template.split @_cfg.rx\n      if is_mark = not is_mark\n        direction = 'append'\n        if segment_or_mark.startsWith '...'\n          segment_or_mark = segment_or_mark[ 3 ... ]\n        else if segment_or_mark.endsWith '...'\n          segment_or_mark = segment_or_mark[ ... segment_or_mark.length - 3 ]\n          direction = 'prepend'\n        @_segments.push []\n        ( @_mark_idxs[ segment_or_mark ] ?= [] ).push idx\n        @_idx_directions[ idx ]           = direction\n      else\n        @_segments.push segment_or_mark\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _fill: ( mode, cfg ) ->\n    cfg             = @types.create.mtr_template_fill cfg\n    { isa\n      type_of }     = @types\n    isa_text        = isa.text\n    do_format       = @cfg.format?\n    for key, idxs of @_mark_idxs\n      if ( value = get cfg, key, misfit ) is misfit\n        continue if mode is 'some'\n        throw new Error \"unknown key #{rpr key}\"\n      value = @cfg.format value, key if do_format\n      throw new Error \"expected text, got a #{type_of value} for key #{rpr key}\" unless isa_text value\n      for idx in idxs\n        if @_idx_directions[ idx ] is 'append' then @_segments[ idx ].push    value\n        else                                        @_segments[ idx ].unshift value\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  fill_all:   ( cfg ) -> @_fill 'all',  cfg\n  fill_some:  ( cfg ) -> @_fill 'some', cfg\n\n  #---------------------------------------------------------------------------------------------------------\n  clear: ->\n    @_segments[ idx ] = [] for idx in [ 1 ... @_segments.length ] by +2\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  finish: ->\n    R = @peek()\n    @clear()\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  peek:   ->\n    @_segments.flat().join ''\n\n  #---------------------------------------------------------------------------------------------------------\n  ### thx to https://stackoverflow.com/a/6969486/7568091 and\n  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#escaping ###\n  _escape_literal_for_regex: ( literal ) -> literal.replace /[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'\n\n\n\n#===========================================================================================================\nclass Metteur extends GUY.props.Strict_owner\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super()\n    return undefined\n\n#-----------------------------------------------------------------------------------------------------------\n@demo = ->\n  template_path   = resolve 'tex/booklet.template.tex'\n  tex_target_path = resolve 'tex/booklet.tex'\n  source_path     = resolve '../metteur-booklets/textura.booklet.pdf'\n  # source_path     = resolve '16-page-booklet.pdf'\n  template        = FS.readFileSync template_path, { encoding: 'utf-8', }\n  #.........................................................................................................\n  Q               =\n    # frame_weight:     '0.25mm'\n    frame_weight:     '0mm'\n  #.........................................................................................................\n  # correction      = { x: -3.5, y: +3.5, }\n  correction      = { x: -2, y: +1.5, }\n  ### TAINT precompute using named values ###\n  width           = 297 / 4\n  height          = 210 / 2\n  orientation     = if layout.orientation is 'ltr' then +1 else -1\n  for side in [ 'recto', 'verso', ]\n    template = template.replace /(?=❰\\.\\.\\.content❱)/g, '\\\\newpage%\\n' if side is 'verso'\n    sheet = layout[ side ]\n    for column in [ 'left', 'right', ]\n      ### TAINT precompute using named values ###\n      if column is 'left'\n        xshift  = 0 + correction.x\n        angle   = -90 * orientation\n      else\n        xshift  = 210 / 2 + correction.x\n        angle   = +90 * orientation\n      for page_nr, page_idx in sheet[ column ]\n        yshift = -( 297 / 4 ) * page_idx + correction.y ### TAINT precompute using named values ###\n        page  = page_template\n        page  = page.replace /❰xshift❱/g,   xshift\n        page  = page.replace /❰yshift❱/g,   yshift\n        page  = page.replace /❰angle❱/g,    angle\n        page  = page.replace /❰width❱/g,    width\n        page  = page.replace /❰height❱/g,   height\n        page  = page.replace /❰page_nr❱/g,  page_nr\n        page  = page.replace /❰source_path❱/g,  source_path\n        page += \" % #{side} #{column} r#{page_idx + 1} p#{page_nr}\\n\"\n        template = template.replace /(?=❰\\.\\.\\.content❱)/g, page\n  template = template.replace /❰\\.\\.\\.content❱/g, ''\n  template = template.replace /❰frame_weight❱/g, Q.frame_weight\n  # template = @interpolate template, Q\n  FS.writeFileSync tex_target_path, template\n  help \"wrote output to #{tex_target_path}\"\n  return null\n\n\n############################################################################################################\nif module is require.main then do =>\n  await @demo()\n"
  ]
}