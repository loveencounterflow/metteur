{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/metteur-templating.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ debug\n  info\n  whisper\n  warn\n  urge\n  help }                  = GUY.trm.get_loggers 'METTEUR/templating'\n{ rpr\n  echo }                  = GUY.trm\n{ hide\n  get\n  has  }                  = GUY.props\n{ freeze }                = GUY.lft\nmisfit                    = Symbol 'misfit'\ntypes                     = require './types'\n\n\n#===========================================================================================================\n# types.declare 'tmpltr_cfg',\n\n#===========================================================================================================\nclass @Template extends GUY.props.Strict_owner\n\n  #---------------------------------------------------------------------------------------------------------\n  hide @, 'misfit', misfit\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super()\n    hide @, 'types', types\n    @cfg    = new GUY.props.Strict_owner { target: ( @types.create.mtr_new_template cfg ), freeze: true, }\n    #.......................................................................................................\n    open    = @_escape_literal_for_regex @cfg.open\n    close   = @_escape_literal_for_regex @cfg.close\n    hide @, '_segments',        []\n    hide @, '_mark_idxs',       {}\n    hide @, '_idx_directions',  {}\n    hide @, '_cfg', freeze\n      open:   open\n      close:  close\n      rx:     /// #{open} (?<key>[^#{close}]*) #{close} ///g\n    #.......................................................................................................\n    @_compile()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _compile: ->\n    is_mark = true\n    for segment_or_mark, idx in @cfg.template.split @_cfg.rx\n      if is_mark = not is_mark\n        direction = 'append'\n        if segment_or_mark.startsWith '...'\n          segment_or_mark = segment_or_mark[ 3 ... ]\n        else if segment_or_mark.endsWith '...'\n          segment_or_mark = segment_or_mark[ ... segment_or_mark.length - 3 ]\n          direction = 'prepend'\n        @_segments.push []\n        ( @_mark_idxs[ segment_or_mark ] ?= [] ).push idx\n        @_idx_directions[ idx ]           = direction\n      else\n        @_segments.push segment_or_mark\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _fill: ( mode, cfg ) ->\n    cfg             = @types.create.mtr_template_fill cfg\n    { isa\n      type_of }     = @types\n    isa_text        = isa.text\n    do_format       = @cfg.format?\n    for key, idxs of @_mark_idxs\n      if ( value = get cfg, key, misfit ) is misfit\n        continue if mode is 'some'\n        throw new Error \"unknown key #{rpr key}\"\n      value = @cfg.format value, key if do_format\n      throw new Error \"expected text, got a #{type_of value} for key #{rpr key}\" unless isa_text value\n      for idx in idxs\n        if @_idx_directions[ idx ] is 'append' then @_segments[ idx ].push    value\n        else                                        @_segments[ idx ].unshift value\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  fill_all:   ( cfg ) -> @_fill 'all',  cfg\n  fill_some:  ( cfg ) -> @_fill 'some', cfg\n\n  #---------------------------------------------------------------------------------------------------------\n  clear: ->\n    @_segments[ idx ] = [] for idx in [ 1 ... @_segments.length ] by +2\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  finish: -> R = @peek(); @clear(); R\n  peek:   -> @_segments.flat().join ''\n\n  #---------------------------------------------------------------------------------------------------------\n  ### thx to https://stackoverflow.com/a/6969486/7568091 and\n  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#escaping ###\n  _escape_literal_for_regex: ( literal ) -> literal.replace /[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@escape_tex_specials = ( text ) ->\n  R = text\n  R = R.replace /\\\\/g,  '\\\\textbackslash{}'\n  R = R.replace /\\{/g,  '\\\\{'\n  R = R.replace /\\}/g,  '\\\\}'\n  R = R.replace /\\$/g,  '\\\\$'\n  R = R.replace /#/g,   '\\\\#'\n  R = R.replace /%/g,   '\\\\%'\n  R = R.replace /_/g,   '\\\\_'\n  R = R.replace /\\^/g,  '\\\\textasciicircum{}'\n  R = R.replace /~/g,   '\\\\textasciitilde{}'\n  R = R.replace /&/g,   '\\\\&'\n  return R\n"
  ]
}